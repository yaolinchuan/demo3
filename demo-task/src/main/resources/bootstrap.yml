server:
  port: 8011
spring:
  application:
    name: task
  sleuth:
    log:
      slf4j:
        enabled: true
    feign:
      enabled: true
    sampler:
      percentage: 1.0
    stream:
      enabled: true
      group: sleuth
  cloud:
    task:
      #任务执行完关闭程序设置
      closecontext_enable: false
    config:
      discovery:
        enabled: false
        service-id: CONFIGSERVER
      enabled: false
      fail-fast: true
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://localhost:3306/task
    driver-class-name: com.mysql.jdbc.Driver
    username: root
    password: root
    #初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties:
      - druid.stat.mergeSql=true
      - druid.stat.slowSqlMillis=5000
    #合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialet: org.hibernate.dialect.MySQL5Dialect
    bus:
      refresh:
        enabled: true
      enabled: true
    stream:
      instance-index: 0
      instance-count: 1
      kafka:
        binder:
          brokers: 127.0.0.1:9092
          zk-nodes: 127.0.0.1:2181
          auto-add-partitions: true
          auto-create-topics: true
          min-partition-count: 1
eureka:
  instance:
    non-secure-port: ${server.port}
    instance-id: ${spring.application.name}:${server.port}
    health-check-url-path: /health
    status-page-url-path: /info
    lease-expiration-duration-in-seconds: 30
    lease-renewal-interval-in-seconds: 10
  client:
    service-url:
      defaultZone: http://localhost:8001/eureka/
#监控配置
endpoints:
  shutdown:
    enabled: true
    sensitive: false
  actuator:
    enabled: true
    sensitive: false
  autoconfig:
    enabled: true
    sensitive: false
  refresh:
    enabled: true
    sensitive: false
  health:
    enabled: true
    sensitive: false
#监控 end
hystrix:
  stream:
    queue:
      content-type: application/json
      destination: springCloudHystrixStream
logging:
  level:
    root: info
    org:
      springframework:
        cloud:
          task: debug
management:
  security:
    enabled: false